# A basic flag custom resource

apiVersion: core.openfeature.dev/v1alpha1
kind: FeatureFlagConfiguration
metadata:
  name: end-to-end
spec:
  featureFlagSpec: |
    {
      "booleanFlags": {
        "new-welcome-message": {
          "state": "enabled",
          "variants": {
            "enabled": true,
            "disabled": false
          },
          "defaultVariant": "enabled",
          "rules": []
        }
      }
    }

---
# Deployment of a demo-app using our custom resource

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openfeature-nest-example-deployment
  labels:
    app: openfeature-nest-example
spec:
  replicas: 3
  selector:
    matchLabels:
      app: openfeature-nest-example
  template:
    metadata:
      labels:
        app: openfeature-nest-example
      annotations:
        openfeature.dev: "enabled"
        openfeature.dev/featureflagconfiguration: "end-to-end"
    spec:
      containers:
        - name: openfeature-nest-example
          image: ghcr.io/open-feature/open-feature-nest-example:latest
          ports:
            - containerPort: 3000

---
# Service exposed using NodePort

apiVersion: v1
kind: Service
metadata:
  name: openfeature-nest-example-service
spec:
  type: NodePort
  selector:
    app: openfeature-nest-example
  ports:
    # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 30000
      targetPort: 3000
      nodePort: 30000
